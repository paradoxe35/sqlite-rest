name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Create Release
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: true

      - name: Extract release notes from CHANGELOG.md
        id: extract-release-notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Extracting release notes for $VERSION"

          # Extract content between current version header and the next version header
          NOTES=$(awk -v ver="$VERSION" '
            BEGIN { found=0; }
            $0 ~ "^## " ver { found=1; next; }
            found && $0 ~ "^## " { exit; }
            found { print; }
          ' CHANGELOG.md)

          # If no notes found, use commit message
          if [ -z "$NOTES" ]; then
            NOTES="${{ github.event.head_commit.message }}"
          fi

          # Escape newlines for GitHub Actions
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"

          echo "notes=$NOTES" >> $GITHUB_OUTPUT

      - name: Create assets
        run: |
          chmod +x ./scripts/release.sh
          ./scripts/release.sh

      - name: Prepare release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          body: ${{ steps.extract-release-notes.outputs.notes }}
          files: |
            ./release/*.zip
            ./release/*.tar.gz
            ./release/checksums.txt
