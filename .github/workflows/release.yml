name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Create Release
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: true

      - name: Extract release notes from CHANGELOG.md
        id: extract-release-notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Extracting release notes for $VERSION"

          # Extract content between current version header and the next version header
          # Use awk to find the section for the current version
          NOTES=$(awk -v ver="$VERSION" '
            /^## / { if (p) exit; if ($2 == ver) p=1; next }
            p { print }
          ' CHANGELOG.md | sed '/^$/d' )

          # If no notes found in CHANGELOG.md, use the commit message
          if [ -z "$NOTES" ]; then
            echo "No specific notes found for $VERSION in CHANGELOG.md, using commit message."
            NOTES="${{ github.event.head_commit.message }}"
          fi

          # Use heredoc to preserve multiline formatting for the output
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create assets
        run: |
          chmod +x ./scripts/release.sh
          ./scripts/release.sh

      - name: Prepare release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          body: ${{ steps.extract-release-notes.outputs.notes }}
          files: |
            ./release/*.zip
            ./release/*.tar.gz
            ./release/checksums.txt
